// Code generated by ent, DO NOT EDIT.

package tag

import (
	"time"
)

const (
	// Label holds the string label denoting the tag type in the database.
	Label = "tag"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldTitle holds the string denoting the title field in the database.
	FieldTitle = "title"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// EdgeNewsList holds the string denoting the news_list edge name in mutations.
	EdgeNewsList = "news_list"
	// EdgeNewsTagging holds the string denoting the news_tagging edge name in mutations.
	EdgeNewsTagging = "news_tagging"
	// Table holds the table name of the tag in the database.
	Table = "tags"
	// NewsListTable is the table that holds the news_list relation/edge. The primary key declared below.
	NewsListTable = "news_taggings"
	// NewsListInverseTable is the table name for the News entity.
	// It exists in this package in order to avoid circular dependency with the "news" package.
	NewsListInverseTable = "news_list"
	// NewsTaggingTable is the table that holds the news_tagging relation/edge.
	NewsTaggingTable = "news_taggings"
	// NewsTaggingInverseTable is the table name for the NewsTagging entity.
	// It exists in this package in order to avoid circular dependency with the "newstagging" package.
	NewsTaggingInverseTable = "news_taggings"
	// NewsTaggingColumn is the table column denoting the news_tagging relation/edge.
	NewsTaggingColumn = "tag_id"
)

// Columns holds all SQL columns for tag fields.
var Columns = []string{
	FieldID,
	FieldTitle,
	FieldCreatedAt,
}

var (
	// NewsListPrimaryKey and NewsListColumn2 are the table columns denoting the
	// primary key for the news_list relation (M2M).
	NewsListPrimaryKey = []string{"news_id", "tag_id"}
)

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// TitleValidator is a validator for the "title" field. It is called by the builders before save.
	TitleValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
)
